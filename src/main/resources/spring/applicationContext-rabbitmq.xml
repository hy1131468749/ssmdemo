<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/rabbit 
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

    <description>rabbitmq 连接服务配置</description>
   <context:property-placeholder
		location="classpath*:rabbitmq.properties"  ignore-unresolvable="true" />
    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" /> 

    <!-- 连接配置 -->
    <rabbit:connection-factory   id="connectionFactory" host="${rabbit.host}" 
    virtual-host="/EMGD" 
    username="${rabbit.username}" password="${rabbit.password}" port="${rabbit.port}"
    publisher-confirms="true"   
     
     />

    <rabbit:admin connection-factory="connectionFactory"/>

	
	 <!-- 声明一个Que -->
    <!-- durable:是否持久化 ；      exclusive: 仅创建者可以使用的私有队列，断开后自动删除；    auto_delete: 当所有消费客户端连接断开后，是否自动删除队列  --> 
    <rabbit:queue  name="queue_emgd_deviceinf" durable="true" auto-delete="false" exclusive="false" 
    
    />
	
	 <!-- 声明一个Exchange -->
    <rabbit:direct-exchange  name="exchange_emgd" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="queue_emgd_deviceinf" key="queue_emgd_deviceinf_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- spring template声明-->
    <rabbit:template   id="amqpTemplate" exchange="exchange_emgd" connection-factory="connectionFactory"  message-converter="jsonMessageConverter"
     confirm-callback="msgSendConfirmCallBack"
     mandatory="true"
     return-callback="messageRetuenCallback"
     retry-template="retryTemplate"
     recovery-callback="retRecoveryCallback"
    
    />    
    
    
    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
    <property name="backOffPolicy">
        <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
            <property name="initialInterval" value="500" />
            <property name="multiplier" value="1.0" />
            <property name="maxInterval" value="10000" />
        </bean>
    </property>
    
</bean>


    
    <!--
    rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。
    rabbit:binding：设置消息queue匹配的key
    -->
    <!-- 监听器 -->
    <bean id="queueListenter"  class="com.demo.component.rabbitmq.listener.ReportInfListener"/>

    <!-- 配置监听queue -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual"  concurrency= "3" prefetch="1" >
     <rabbit:listener   queues="queue_emgd_deviceinf" ref="queueListenter"/> 
    </rabbit:listener-container>
    
    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
   <!--  <rabbit:listener-container
        connection-factory="connectionFactory">
        <rabbit:listener queues="queueChris" ref="receiverChris" />
    </rabbit:listener-container> -->
    
</beans>

