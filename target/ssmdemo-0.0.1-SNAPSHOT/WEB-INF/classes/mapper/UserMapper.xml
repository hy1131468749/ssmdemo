<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.demo.bean.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updat_time" jdbcType="TIMESTAMP" property="updatTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="system_user" jdbcType="INTEGER" property="systemUser" />
    <result column="url_id" jdbcType="BIGINT" property="urlId" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, role_id, create_time, updat_time, last_login_time, system_user, 
    url_id, org_id, realname, mobile, email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.bean.User">
    insert into user (id, username, password, 
      role_id, create_time, updat_time, 
      last_login_time, system_user, url_id, 
      org_id, realname, mobile, 
      email)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updatTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{systemUser,jdbcType=INTEGER}, #{urlId,jdbcType=BIGINT}, 
      #{orgId,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updatTime != null">
        updat_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="systemUser != null">
        system_user,
      </if>
      <if test="urlId != null">
        url_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatTime != null">
        #{updatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemUser != null">
        #{systemUser,jdbcType=INTEGER},
      </if>
      <if test="urlId != null">
        #{urlId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.bean.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatTime != null">
        updat_time = #{updatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemUser != null">
        system_user = #{systemUser,jdbcType=INTEGER},
      </if>
      <if test="urlId != null">
        url_id = #{urlId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.bean.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updat_time = #{updatTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      system_user = #{systemUser,jdbcType=INTEGER},
      url_id = #{urlId,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      realname = #{realname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
   select * from user where username =  #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="selectList"  resultMap="BaseResultMap">
   select * from user
  </select> 
</mapper>